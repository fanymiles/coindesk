plot_bpi(df)
library(coindesk)
df <- get_history(currency = 'CNY',start = '2017-10-01', end = '2017-12-01')
df
plot_bpi(df)
devtools::check()
devtools::check()
rm(list = ls())
devtools::check()
library(coindesk)
devtools::load_all()
library(coindesk)
df <- get_history(currency = 'CNY',start = '2017-10-01', end = '2017-12-01')
library(coindesk)
library(httr)
library(jsonlite)
df <- get_history(currency = 'CNY',start = '2017-10-01', end = '2017-12-01')
df
plot_bpi(df)
df
library(coindesk)
library(httr)
library(jsonlite)
df <- get_history(currency = 'CNY',start = '2017-10-01', end = '2017-12-01')
df
plot_bpi(df)
library(coindesk)
library(httr)
library(jsonlite)
# query current Bitcoin Price Index in USD
bpi_price()
# query current Bitcoin Price Index in many currencies
currency <- c("EUR","CNY","AUD")
bpi_price(currency)
library(coindesk)
# check and get currency code
get_currency_code()
library(coindesk)
library(httr)
library(jsonlite)
# get past 30 days BPI in CNY
get_history(currency = 'CNY')
# get historical BPI from Oct.1 2017 to Dec.1 2017 in EUR
get_history(currency = 'EUR', start = '2017-10-01', end = '2017-12-01')
# get yesterday BPI (default in USD)
get_history(yesterday = TRUE)
devtools::document()
Sys.getenv("TZ")
as.POSIXct(t, tz=getOption("tz"))
Sys.getenv("TZ")
devtools::document()
devtools::load_all()
library(coindesk)
library(httr)
library(jsonlite)
# get historical BPI data in CNY
df <- get_history(currency = 'CNY',start = '2017-10-01', end = '2017-12-01')
df
# plot the time and the price
plot_bpi(df)
source('~/Desktop/GitHub/Fan_Yifeng/Final_Project/coindesk/R/plot.R', echo=TRUE)
devtools::check()
devtools::document()
devtools::document()
devtools::load_all()
devtools::document()
devtools::check()
devtools::check()
library(coindesk)
library(httr)
library(jsonlite)
# query current Bitcoin Price Index in USD
bpi_price()
# query current Bitcoin Price Index in a list of currencies
currency <- c("EUR","CNY","AUD")
bpi_price(currency)
library(coindesk)
# check and get currency code
get_currency_code()
library(coindesk)
library(httr)
library(jsonlite)
# get past 30 days BPI in CNY
get_history(currency = 'CNY')
# get historical BPI from Oct.1 2017 to Dec.1 2017 in EUR
get_history(currency = 'EUR', start = '2017-10-01', end = '2017-12-01')
# get yesterday BPI (default in USD)
get_history(yesterday = TRUE)
library(coindesk)
library(httr)
library(jsonlite)
# get historical BPI data in CNY
df <- get_history(currency = 'CNY',start = '2017-10-01', end = '2017-12-01')
df
# plot the time and the price
plot_bpi(df)
devtools::document()
library(coindesk)
library(httr)
library(jsonlite)
# get historical BPI data in CNY
df <- get_history(currency = 'CNY',start = '2017-10-01', end = '2017-12-01')
df
# plot the time and the price
plot_bpi(df)
library(coindesk)
library(httr)
library(jsonlite)
# get historical BPI data in CNY
df <- get_history(currency = 'CNY',start = '2017-10-01', end = '2017-12-01')
df
# plot the time and the price
plot_bpi(df)
devtools::check()
devtools::check()
devtools:document()
devtools::document()
devtools::check()
devtools::document()
devtools::load_all()
devtools::check()
library(coindesk)
library(httr)
library(jsonlite)
# get past 30 days BPI in CNY
get_history(currency = 'CNY')
# get historical BPI from Oct.1 2017 to Dec.1 2017 in EUR
get_history(currency = 'EUR', start = '2017-10-01', end = '2017-12-01')
# get yesterday BPI (default in USD)
get_history(yesterday = TRUE)
library(coindesk)
library(httr)
library(jsonlite)
# get historical BPI data in CNY
# df <-
# plot the time and the price
plot_bpi(get_history(currency = 'CNY',start = '2017-10-01', end = '2017-12-01'))
devtools::check()
df
library(coindesk)
library(httr)
library(jsonlite)
# get historical BPI data in CNY
df <- get_history(currency = 'CNY',start = '2017-10-01', end = '2017-12-01')
df
# plot the time and the price
plot_bpi(df)
df
rownames(df)
install.packages("lubridate")
ymd('20170403')
library(lubridate)
library(lubridate)
ymd('20150443')
ymd('20150413')
rownames(df)
ymd(rownames(df))
devtools::document()
devtools::load_all()
source('~/Desktop/GitHub/Fan_Yifeng/Final_Project/coindesk/R/plot.R', echo=TRUE)
source('~/Desktop/GitHub/Fan_Yifeng/Final_Project/coindesk/R/plot.R', echo=TRUE)
devtools::document()
devtools::check()
library(coindesk)
devtools::load_all()
library(coindesk)
library(httr)
library(jsonlite)
# get historical BPI data in CNY
df <- get_history(currency = 'CNY',start = '2017-10-01', end = '2017-12-01')
df
# plot the time and the price
plot_bpi(df)
df
devtools::use_data(df)
devtools::document()
?df
library(coindesk)
library(httr)
library(jsonlite)
# get a sample query result from the package
coindesk::df
# plot the time and the price of the sample result
plot_bpi(coindesk::df)
devtools::document()
devtools::check()
devtools::document()
devtools::check()
library(coindesk)
library(httr)
library(jsonlite)
# query current Bitcoin Price Index in USD
bpi_price()
# query current Bitcoin Price Index in a list of currencies
currency <- c("EUR","CNY","AUD")
bpi_price(currency)
#library(coindesk)
# check and get currency code
get_currency_code()
library(coindesk)
library(httr)
library(jsonlite)
# get a sample query result from the package
coindesk::df
# plot the time and the price of the sample result
plot_bpi(coindesk::df)
devtools::use_vignette("coindesk-vignette")
devtools::document()
devtools::load_all()
devtools::test()
devtools::use_testthat()
devtools::test()
?df
devtools::document()
devtools::load_all()
devtools::test
devtools::test()
??testthat::expectation
?testthat::expectation
devtools::document()
devtools::document()
devtools::check()
devtools::check()
knit_with_parameters('~/Desktop/GitHub/Fan_Yifeng/Final_Project/coindesk/vignettes/coindesk-vignette.Rmd')
unlink('vignettes/coindesk-vignette_cache', recursive = TRUE)
library(coindesk)
library(httr)
library(jsonlite)
# query current Bitcoin Price Index default in USD
bpi_price()
# query current Bitcoin Price Index in a list of currencies
currency <- c("EUR","CNY","AUD")
bpi_price(currency)
library(coindesk)
# check and get currency code
get_currency_code()
library(coindesk)
library(httr)
library(jsonlite)
# get past 30 days BPI in CNY
get_history(currency = 'CNY')
# get historical BPI from Oct.1 2017 to Dec.1 2017 in EUR
get_history(currency = 'EUR', start = '2017-10-01', end = '2017-12-01')
# get yesterday BPI (default in USD)
get_history(yesterday = TRUE)
library(coindesk)
library(httr)
library(jsonlite)
# get a sample query result from the package
coindesk::df
# plot the time and the price of the sample result
plot_bpi(coindesk::df)
library(coindesk)
library(httr)
library(jsonlite)
# query current Bitcoin Price Index default in USD
bpi_price()
# query current Bitcoin Price Index in a list of currencies
currency <- c("EUR","CNY","AUD")
bpi_price(currency)
rmarkdown::render("output.Rmd")
rmarkdown::render("coindesk-vignette.Rmd")
path[1]
library(coindesk)
library(coindesk)
library(httr)
library(jsonlite)
# get a sample query result from the package
coindesk::df
# plot the time and the price of the sample result
plot_bpi(coindesk::df)
library(coindesk)
library(httr)
library(jsonlite)
# get a sample query result from the package
coindesk::df
# plot the time and the price of the sample result
plot_bpi(coindesk::df)
library(coindesk)
library(httr)
library(jsonlite)
# get a sample query result from the package
coindesk::df
# plot the time and the price of the sample result
plot_bpi(coindesk::df)
library(coindesk)
library(httr)
library(jsonlite)
# get a sample query result from the package
coindesk::df
library(coindesk)
library(httr)
library(jsonlite)
# get a sample query result from the package
coindesk::df
# plot the time and the price of the sample result
plot_bpi(coindesk::df)
library(coindesk)
# check and get currency code
currency <- get_currency_code()
head(currency, 20)
library(coindesk)
# check and get currency code
currency <- get_currency_code()
head(currency, 10)
library(coindesk)
library(httr)
library(jsonlite)
# get past 30 days BPI in CNY
past_thirty_days <- get_history(currency = 'CNY')
# check the head of past_thirt_days
head(past_thirty_days)
length(past_thirty_days)
# get historical BPI from Oct.1 2017 to Dec.1 2017 in EUR
get_history(currency = 'EUR', start = '2017-10-01', end = '2017-12-01')
# get yesterday BPI (default in USD)
get_history(yesterday = TRUE)
library(coindesk)
library(httr)
library(jsonlite)
# get past 31 days BPI in CNY
past_month <- get_history(currency = 'CNY')
# check the head of past_thirt_days
head(past_month)
length(past_month$price)
# get historical BPI from Oct.1 2017 to Dec.1 2017 in EUR
get_history(currency = 'EUR', start = '2017-10-01', end = '2017-12-01')
# get yesterday BPI (default in USD)
get_history(yesterday = TRUE)
library(coindesk)
library(httr)
library(jsonlite)
# get past 31 days BPI in CNY
past_month <- get_history(currency = 'CNY')
# check the head of past month data
head(past_month)
# length of the past_month (31 days)
length(past_month$price)
# get historical BPI from Oct.1 2017 to Dec.1 2017 in EUR
randomDate <- get_history(currency = 'EUR', start = '2017-10-01', end = '2017-12-01')
# check the head of date selected from random date
head(randomDate, 10)
# get yesterday BPI (default in USD)
get_history(yesterday = TRUE)
library(coindesk)
library(httr)
library(jsonlite)
# get past 31 days BPI in CNY
past_month <- get_history(currency = 'CNY')
# check the head of past month data
head(past_month, 10)
# length of the past_month (31 days)
length(past_month$price)
# get historical BPI from Oct.1 2017 to Dec.1 2017 in EUR
randomDate <- get_history(currency = 'EUR', start = '2017-10-01', end = '2017-12-01')
# check the head of date selected from random date
head(randomDate, 10)
# get yesterday BPI (default in USD)
get_history(yesterday = TRUE)
library(coindesk)
library(httr)
library(jsonlite)
# get past 31 days BPI in CNY
past_month <- get_history(currency = 'CNY')
# check the head of past month data
head(past_month, 5)
# check the tail of past month data
tail(past_month, 5)
# length of the past_month (31 days)
length(past_month$price)
# get historical BPI from Oct.1 2017 to Dec.1 2017 in EUR
randomDate <- get_history(currency = 'EUR', start = '2017-10-01', end = '2017-12-01')
# check the head of date selected from random date
head(randomDate, 10)
# get yesterday BPI (default in USD)
get_history(yesterday = TRUE)
library(coindesk)
library(httr)
library(jsonlite)
# get past 31 days BPI in CNY
past_month <- get_history(currency = 'CNY')
# check the head of past month data
head(past_month, 10)
# check the tail of past month data
tail(past_month, 10)
# length of the past_month (31 days)
length(past_month$price)
# get historical BPI from Oct.1 2017 to Dec.1 2017 in EUR
randomDate <- get_history(currency = 'EUR', start = '2017-10-01', end = '2017-12-01')
# check the head of data selected from random date
head(randomDate, 10)
# check the tail of data selected from random date
tail(randomDate, 10)
# get yesterday BPI (default in USD)
get_history(yesterday = TRUE)
library(coindesk)
library(httr)
library(jsonlite)
# get a sample query result from the package
sample <- coindesk::df
# check the head of sample data in the package
head(sample, 10)
# plot the time and the price of the sample result
plot_bpi(coindesk::df)
library(coindesk)
library(httr)
library(jsonlite)
# get a sample query result from the package
sample <- coindesk::df
# check the head of sample data in the package
head(sample, 10)
# plot the time and the price of the sample result
plot_bpi(coindesk::df)
library(coindesk)
library(httr)
library(jsonlite)
# get a sample query result from the package
sample <- coindesk::df
# check the head of sample data in the package
head(sample, 10)
# plot the time and the price of the sample result
plot_bpi(sample)
library(coindesk)
library(httr)
library(jsonlite)
# get a sample query result from the package
sample <- coindesk::df
# check the head of sample data in the package
head(sample, 10)
# plot the time and the price of the sample result
plot_bpi(coindesk::df)
library(coindesk)
# check and get currency code
currency <- get_currency_code()
# check the first ten currencies
head(currency, 10)
# check the last ten currencies
tail(currency, 10)
# check the number of supported currencies
length(currency$currency)
library(coindesk)
library(httr)
library(jsonlite)
# get yesterday BPI (default in USD)
get_history(yesterday = TRUE)
# get yesterday BPI, in CNY
get_history(currency = 'CNY', yesterday = TRUE)
library(coindesk)
library(httr)
library(jsonlite)
# get yesterday BPI (default in USD)
get_history(yesterday = TRUE)
# get yesterday BPI, in CNY
get_history(currency = 'CNY', yesterday = TRUE)
library(coindesk)
library(httr)
library(jsonlite)
# get a sample query result from the package
sample <- coindesk::df
# check the head of sample data in the package
head(sample, 10)
# plot the time and the price of the sample result
plot_bpi(coindesk::df)
library(coindesk)
library(httr)
library(jsonlite)
# get historical BPI from Oct.1 2017 to Dec.1 2017 in EUR
randomDate <- get_history(currency = 'EUR', start = '2017-10-01', end = '2017-12-01')
# check the head of data selected from random date
head(randomDate, 10)
# check the tail of data selected from random date
tail(randomDate, 10)
library(coindesk)
library(httr)
library(jsonlite)
# get past 31 days BPI in CNY
past_month <- get_history(currency = 'CNY')
# check the head of past month data
head(past_month, 10)
# check the tail of past month data
tail(past_month, 10)
# length of the past_month (31 days)
length(past_month$price)
library(coindesk)
library(httr)
library(jsonlite)
# query current Bitcoin Price Index default in USD
bpi_price()
# query current Bitcoin Price Index in a list of currencies
currency <- c("EUR","CNY","AUD")
bpi_price(currency)
library(coindesk)
library(httr)
library(jsonlite)
# query current Bitcoin Price Index in a list of currencies
currency <- c("EUR","CNY","AUD")
bpi_price(currency)
library(coindesk)
library(httr)
library(jsonlite)
# query current Bitcoin Price Index default in USD
bpi_price()
library(coindesk)
library(httr)
library(jsonlite)
# query current Bitcoin Price Index default in USD
bpi_price()
# query current BPI in EUR
bpi_price(currency = 'EUR')
devtools::document()
devtools::load_all()
devtools::check()
